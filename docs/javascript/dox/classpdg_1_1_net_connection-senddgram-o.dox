namespace pdg { /**

\fn pdg::NetConnection::sendDgram(object message)

\brief send a JavaScript object to the remote endpoint via UDP

The object will be sent using UDP if it is available. Delivery is not guaranteed and neither is in-order deliver of messages. This is ideal for small bits of information that are frequently resent, such as position or status updates. 

NetConnection handles packet framing for you, so if the packet arrives, the NetConnection on the remote endpoint will receive an onMessage callback with the string you sent. If the message cannot be sent you will not get any notification. It will simply disappear into the ether.

\param message the object to send

\return itself (for call chaining)

\sa send(object)
\sa sendDgram(ISerializable)

\remark To guard against out-of-order delivery, you should always use a sequence number so you can drop older updates that arrive after newer ones.

\warning Any string longer than MTU (generally 1500 bytes, but can be smaller) will always fail to send

\warning Only use this for native JavaScript objects. No PDG objects can be sent over the network this way.


**/ }