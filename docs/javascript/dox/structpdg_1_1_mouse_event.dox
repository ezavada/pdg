namespace pdg { /**

\struct pdg::MouseEvent

\brief the user did something with the mouse

Generated by the EventManager whenever the user moves the mouse (#eventType_MouseMove) or clicks a mouse button (#eventType_MouseDown and #eventType_MouseUp). 

The EventManager also tracks the state of the mouse buttons, so you can retrieve that at any time with EventManager.isButtonDown(). The GraphicsManager tracks the position of the mouse, and that can be retrieved at any time with GraphicsManager.getMouse().

    { 
        emitter: {},            // the emitter that generated this event
        eventType: 7,           // the event type (eventType_MouseDown, eventType_MouseUp, or eventType_MouseMove)
        shift: false,           // true if the shift key is held down
        ctrl: false,           	// true if the control key is held down
        alt: false,           	// true if the alt (or option) key is held down
        meta: false,           	// true if the meta (windows or command) key is held down
        mousePos: {
            x: 456,	            // the x coordinate of the mouse when the event occurred
            y: 201              // the y coordinate of the mouse when the event occurred
        },
        leftButton: false,      // true if the left mouse button was down
        rightButton: false,     // true if the left mouse button was down
        buttonNumber: 0,        // true if the meta (windows or command) key is held down
        lastClickPos: { 
            x: 456,	            // the x coordinate of the last mouseDown event
            y: 201              // the y coordinate of the last mouseDown event
        },
        lastClickElapsed: 201   // the number of milliseconds since the last mouseDown
    }

Location and time since the last mouseDown event are provided to make it easier to detect double-clicks, dragging, and gestures.

\note on a touch device mouse moved events are only generated when the user is touching the device, and each finger touching is treated like a separate mouse button, with the button number based on the order the fingers touched the device. 

\note A SpriteLayer has the ability to automatically handle these mouse events and generate #eventType_SpriteTouch for any Sprite that was clicked on, or pass these on as mouse events if no Sprite was hit.

\see eventType_MouseDown
\see eventType_MouseUp
\see eventType_MouseMove
\see eventType_SpriteTouch
\see onMouseDown()
\see onMouseUp()
\see onMouseMove()
\see EventManager.isButtonDown()
\see GraphicsManager.getMouse()

\related pdg::EventManager
\related pdg::GraphicsManager
\ingroup Events

**/ }